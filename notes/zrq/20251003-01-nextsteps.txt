#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2025, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Success

    Result:

        Work in progress ...

# -----------------------------------------------------

Update the APIs to include the latest ideas and update the SRCNet sequence diagrams to match.
https://confluence.skatelescope.org/display/SRCSC/SRCNet+Sequence+Diagrams

    Workstep Discovery API

        searchWorkstep()
            <criteria>
            =>
            List<URL->Workstep{..}>

    Workstep Editor API

        createWorkstep()
            Workstep{..}
            List<DataResource{..}>
            Executable{..}
            errors|success
            redirect -> Workstep{..}

        editWorkstep()
            UUID->Component{..}
            Update{path, value}
            =>
            errors|success
            redirect -> Component{..}

        selectWorkstep()
            UUID
            =>
            Workstep{..}

    Workstep Executuion API

        getOffers()
            Workstep{..}
            List<UUID> services
            Int limit
            Int timeout
            =>
            List<Workstep>

        getOfferset()
            UUID
            =>
            List<Workstep>

    Execution Broker API

        getOffers()
            Workstep{..}
            =>
            List<Workstep>

        selectOffer()
            UUID
            =>
            Workstep


